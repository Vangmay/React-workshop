{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github_Repositories\\\\React-workshop\\\\src\\\\Components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Task from \"./Task\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  tasks,\n  setTasks\n}) {\n  _s();\n  const [updateTask, setUpdateTask] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Completed?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: tasks.map((task, i) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            task: task,\n            i: i,\n            tasks: tasks,\n            setTasks: setTasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TaskList, \"bceUQJvvQFVfoD20yyjicGKyuhU=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","Task","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","tasks","setTasks","_s","updateTask","setUpdateTask","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","i","_c","$RefreshReg$"],"sources":["D:/Github_Repositories/React-workshop/src/Components/TaskList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nfunction TaskList({ tasks, setTasks }) {\r\n  const [updateTask, setUpdateTask] = useState(\"\");\r\n  return (\r\n    <>\r\n      <h2>Task list</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>No.</th>\r\n            <th>Task</th>\r\n            <th>Completed?</th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <tbody>\r\n        {tasks.map((task, i) => {\r\n          return (\r\n            <>\r\n              <Task task={task} i={i} tasks={tasks} setTasks={setTasks} />\r\n              {/* <tr key={i}>\r\n                <td>{i + 1}</td>\r\n                <td>{task}</td>\r\n                <input type=\"checkbox\" />\r\n                <button onClick={() => onDeleteTask(i)}>Delete</button>\r\n                <input\r\n                  type=\"text\"\r\n                  value={updateTask}\r\n                  onChange={(e) => setUpdateTask(e.target.value)}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    onEditTask(i, updateTask);\r\n                    setUpdateTask(\"\");\r\n                  }}\r\n                >\r\n                  Edit\r\n                </button>\r\n              </tr> */}\r\n            </>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,oBACEG,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBb,OAAA;MAAAS,QAAA,eACET,OAAA;QAAAS,QAAA,eACET,OAAA;UAAAS,QAAA,gBACET,OAAA;YAAAS,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZb,OAAA;YAAAS,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbb,OAAA;YAAAS,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACRb,OAAA;MAAAS,QAAA,EACGL,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;QACtB,oBACEhB,OAAA,CAAAE,SAAA;UAAAO,QAAA,eACET,OAAA,CAACF,IAAI;YAACiB,IAAI,EAAEA,IAAK;YAACC,CAAC,EAAEA,CAAE;YAACZ,KAAK,EAAEA,KAAM;YAACC,QAAQ,EAAEA;UAAS;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,gBAsB5D,CAAC;MAEP,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACR,CAAC;AAEP;AAACP,EAAA,CA9CQH,QAAQ;AAAAc,EAAA,GAARd,QAAQ;AAgDjB,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}